[global]
act_on_success=true
inputdirectory = "testdir"
[any]
all=true
conditions = ["is_dir"]
actions=[["smlm_alignment",".csv", "is_thunderstorm", 500, 5, 1, 15], ["image_colocalization", 3, "[1,2].tif", "is_2d_img", "filter"]]

# Alignment parameters

# The 500 determines the maximum distance between the closest pairs of fiducials, in nm

# The '5' value determines the maximum number of beads to look for, in cells with many beads detection can fail if too few are considered across channels

# 1 : Z mode filtering, the mode is the density peak, e.g. the focal plane, the code filters out localizations below mode+-std(z) (usually a ~ 300nm band)
# Set to lower for harsher filtering, higher for retaining more points (do not set to zero). 
# Ignored for 2D data

# 15 : keep only localizations with a precision ("uncertainty [nm]") of less than 15. This avoids artifacts in dense structures.
# For 1 cell, 15 keeps 60% of data, going to 10, only 30% is left, so be careful.

# Colocalizations parameters
# The '3' value in colocalization referes to the window size used in colocalization analysis, increase for a wider scope, decrease for a finer view
# The 'filter' argument removes background intensity from the images before doing colocalization, see https://github.com/bencardoen/Colocalization.jl/blob/0ea60c1d192679a5cce1cde4a037af21cb644ed6/src/Colocalization.jl#L54
# By default it removes intensity < mean, which for point cloud projections are 1-2 emissions per pixel, e.g. isolated emissions.

# Files are saved as $(originalfilename)_{aligned.csv} etc. 
# CSV files include the filename and/or directory path used
